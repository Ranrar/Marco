# CommonMark AST Template

RootNode {
    type: "root",
    children: [
        Heading {
            type: "heading",
            depth: 1,
            children: [ TextNode { type: "text", value: "Heading 1" } ]
        },
        Heading {
            type: "heading",
            depth: 2,
            children: [ TextNode { type: "text", value: "Heading 2" } ]
        },
        Paragraph {
            type: "paragraph",
            children: [
                TextNode { type: "text", value: "This is a sample paragraph with " },
                Strong { type: "strong", children: [ TextNode { type: "text", value: "bold" } ] },
                TextNode { type: "text", value: " and " },
                Emphasis { type: "emphasis", children: [ TextNode { type: "text", value: "italic" } ] },
                TextNode { type: "text", value: " text." }
            ]
        },
        BlockQuote {
            type: "blockquote",
            children: [
                Paragraph { type: "paragraph", children: [ TextNode { type: "text", value: "A blockquote." } ] }
            ]
        },
        List {
            type: "list",
            ordered: false,
            children: [
                ListItem { type: "listItem", children: [ Paragraph { type: "paragraph", children: [ TextNode { type: "text", value: "First item" } ] } ] },
                ListItem { type: "listItem", children: [ Paragraph { type: "paragraph", children: [ TextNode { type: "text", value: "Second item" } ] } ] }
            ]
        },
        CodeBlock {
            type: "codeBlock",
            language: Some("rust"),
            value: "fn main() {\n    println!(\"Hello World\");\n}"
        },
        HorizontalRule {
            type: "thematicBreak"
        },
        Link {
            type: "link",
            url: "https://example.com",
            title: "Example",
            children: [ TextNode { type: "text", value: "Example Link" } ]
        },
        Image {
            type: "image",
            url: "https://example.com/image.png",
            title: "Example Image",
            alt: "Alt text"
        },
        InlineCode {
            type: "inlineCode",
            value: "let x = 5;"
        }
    ]
}
